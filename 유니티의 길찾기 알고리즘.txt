<유니티의 길찾기 알고리즘>
1. 가장 단순한 방법
: 타겟의 position을 향하는 방향벡터로 이동.
: 단점 - 지나갈수없는 구조물을 돌아가지 못함
2. 일반적인 방법
: 맵을 2차원의 Grid로 구성. 사전에 어느 영역이 구조물인지
기록해놈. 타겟까지 도달하는 길을 어떤 Grid 좌표를 밟으면서
이동할지 계산하는 방법
: 단점 - 구현하기 복잡!!! 그리드의 크기에 따라 성능이슈가
발생할 수 있음
: A* Pathfinding
3. 유니티가 제공하는 라이브러리를 이용하는 방법
: 내부적으로 A* Pathfinding을 구현함
: 사용하기 간편
: 단점 - 3D 베이스로 구성되어있으므로 3D구현에 대한 이해가
선행되어야 함. 정해진 방식으로만 구동되므로 확장성이 조금
부족함.
: NavMesh










